html {
    scroll-behavior: smooth;
  }
  

  /* import React, { useState } from 'react';
  import { Container, Row, Col, Form, Button, Card, Tabs, Tab } from 'react-bootstrap';
  import { useNavigate } from 'react-router-dom';
  import axios from 'axios';  // For sending data to the backend
  import '../styles/CoursePage.css';
  
  const NewCourse = () => {
    const navigate = useNavigate();
  
    const [courseImage, setCourseImage] = useState(null);
    const [lessons, setLessons] = useState([
      { id: 1, title: "Introduction", content: "", duration: "10 min", videoUrl: "" },
      { id: 2, title: "Key Concepts", content: "", duration: "15 min", videoUrl: "" },
    ]);
  
    // Updated courseData based on backend model
    const [courseData, setCourseData] = useState({
      title: '',
      description: '',
      category: 'programming',  // Default value from CATEGORY_CHOICES
      difficulty_level: 'beginner',  // Default value from DIFFICULTY_CHOICES
      teacher: 1,  // Replace with actual teacher ID
    });
  
    const handleImageUpload = (e) => {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (event) => setCourseImage(event.target.result);
        reader.readAsDataURL(file);
      }
    };
  
    const addLesson = () => {
      const newId = lessons.length ? Math.max(...lessons.map(l => l.id)) + 1 : 1;
      setLessons([
        ...lessons,
        { id: newId, title: "", content: "", duration: "", videoUrl: "" }
      ]);
    };
  
    const removeLesson = (id) => {
      setLessons(lessons.filter(l => l.id !== id));
    };
  
    const handleSaveCourse = async () => {
      const payload = {
        ...courseData,
        thumbnail: courseImage,  // Sending the image data for course thumbnail
        lessons,
      };
  
      try {
        const response = await axios.post('/api/courses/', payload);
        console.log('Course saved successfully:', response.data);
        navigate('/teacher/courses');
      } catch (error) {
        console.error('Error saving course:', error);
      }
    };
  
    return (
      <Container fluid className="p-4">
        <div className="d-flex justify-content-between align-items-center mb-4">
          <Button variant="outline-primary" onClick={() => navigate('/teacher/courses')}>‚Üê Back</Button>
          <h2>Create New Course</h2>
          <div className="d-flex gap-2">
            <Button variant="outline-secondary">Preview</Button>
            <Button variant="primary" onClick={handleSaveCourse}>Save Course</Button>
          </div>
        </div>
  
        <Tabs defaultActiveKey="details" className="mb-3">
         
          <Tab eventKey="details" title="Course Details">
            <Card className="p-4">
              <h4>Basic Information</h4>
              <Form>
                <Form.Group className="mb-3">
                  <Form.Label>Course Title</Form.Label>
                  <Form.Control
                    value={courseData.title}
                    onChange={(e) => setCourseData({ ...courseData, title: e.target.value })}
                    placeholder="e.g. Introduction to Machine Learning"
                  />
                </Form.Group>
  
                <Form.Group className="mb-3">
                  <Form.Label>Course Description</Form.Label>
                  <Form.Control
                    as="textarea"
                    rows={4}
                    value={courseData.description}
                    onChange={(e) => setCourseData({ ...courseData, description: e.target.value })}
                    placeholder="Provide a detailed description of your course"
                  />
                </Form.Group>
  
                <Row>
                  <Col md={6}>
                    <Form.Group className="mb-3">
                      <Form.Label>Category</Form.Label>
                      <Form.Select
                        value={courseData.category}
                        onChange={(e) => setCourseData({ ...courseData, category: e.target.value })}
                      >
                        <option value="programming">Programming</option>
                        <option value="data_science">Data Science</option>
                        <option value="web_development">Web Development</option>
                        <option value="ai_ml">AI & Machine Learning</option>
                        <option value="cloud_computing">Cloud Computing</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
  
                  <Col md={6}>
                    <Form.Group className="mb-3">
                      <Form.Label>Difficulty Level</Form.Label>
                      <Form.Select
                        value={courseData.difficulty_level}
                        onChange={(e) => setCourseData({ ...courseData, difficulty_level: e.target.value })}
                      >
                        <option value="beginner">Beginner</option>
                        <option value="intermediate">Intermediate</option>
                        <option value="advanced">Advanced</option>
                      </Form.Select>
                    </Form.Group>
                  </Col>
                </Row>
  
                <Form.Group className="mb-3">
                  <Form.Label>Course Thumbnail</Form.Label>
                  <div className="upload-thumbnail mb-2">
                    {courseImage ? (
                      <img src={courseImage} alt="Thumbnail" className="thumbnail-img" />
                    ) : (
                      <div className="thumbnail-placeholder">No Image Selected</div>
                    )}
                  </div>
                  <Form.Control type="file" accept="image/*" onChange={handleImageUpload} />
                </Form.Group>
              </Form>
            </Card>
          </Tab>
  
  
  
  
  
      
          <Tab eventKey="content" title="Content">
            <Card className="p-4">
              <div className="d-flex justify-content-between align-items-center mb-3">
                <h4>Course Lessons</h4>
                <Button variant="success" onClick={addLesson}>+ Add Lesson</Button>
              </div>
  
              {lessons.map((lesson, index) => (
                <Card className="mb-3 p-3" key={lesson.id}>
                  <Row className="align-items-center">
                    <Col md={4}>
                      <Form.Control
                        placeholder="Lesson Title"
                        value={lesson.title}
                        onChange={(e) => {
                          const updated = [...lessons];
                          updated[index].title = e.target.value;
                          setLessons(updated);
                        }}
                      />
                    </Col>
  
                    <Col md={4}>
                      <Form.Control
                        placeholder="Video URL"
                        value={lesson.videoUrl}
                        onChange={(e) => {
                          const updated = [...lessons];
                          updated[index].videoUrl = e.target.value;
                          setLessons(updated);
                        }}
                      />
                    </Col>
  
                    <Col md={3}>
                      <Form.Control
                        placeholder="Duration (e.g. 10 min)"
                        value={lesson.duration}
                        onChange={(e) => {
                          const updated = [...lessons];
                          updated[index].duration = e.target.value;
                          setLessons(updated);
                        }}
                      />
                    </Col>
  
                    <Col md={1}>
                      <Button variant="danger" size="sm" onClick={() => removeLesson(lesson.id)}>üóëÔ∏è</Button>
                    </Col>
                  </Row>
  
                  <Form.Control
                    as="textarea"
                    rows={2}
                    placeholder="Lesson Content"
                    className="mt-2"
                    value={lesson.content}
                    onChange={(e) => {
                      const updated = [...lessons];
                      updated[index].content = e.target.value;
                      setLessons(updated);
                    }}
                  />
                </Card>
              ))}
            </Card>
          </Tab>
  
        
          <Tab eventKey="settings" title="Settings">
            <Card className="p-4">
              <h4>Course Settings</h4>
              <Form>
                <div className="d-flex justify-content-end gap-2 mt-3">
                  <Button variant="outline-secondary">Cancel</Button>
                  <Button variant="primary" onClick={handleSaveCourse}>Save Settings</Button>
                </div>
              </Form>
            </Card>
          </Tab>
        </Tabs>
      </Container>
    );
  };
  
  export default NewCourse;
   */